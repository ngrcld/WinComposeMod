;----------------------------------------------------------------------------
;
;    MODULE NAME:   AUTOTAG.MMH
;
;        $Author:   USER "Dennis"  $
;      $Revision:   1.55  $
;          $Date:   05 May 2018 16:40:20  $
;       $Logfile:   D:/DBAREIS/Projects.PVCS/Win32/MakeMsi/AutoTag.mmh.pvcs  $
;      COPYRIGHT:   (C)opyright Dennis Bareis, Australia, 2003
;                   All rights reserved.
;
;    DESCRIPTION:   Do not include this header directly, use 'MAKEMSI.MMH'
;                   instead.
;----------------------------------------------------------------------------


;--- Tagging for DOCO or the generated HTML page? ---------------------------
#define  AtDllCaFunc_undocumented   \
           #AutoTag ^{$#1}{$#2}(^ ^<font color="orange" title="A currently undocumented routine you can use...">{$#1}<?_>{$#2}</font>(^
#ifdef AUTOTAG_FOR_DOCO
   ;--- Doing it to build the MAKEMSI doco ----------------------------------
   #define  AtLinkTo  <$LinkTo {$?}>
   #define  AtVbsCaFunc   \
           #AutoTag ^{$Before=""}{$#1}{$After=""}^ ^{$Before}<$LinkTo Text="{$#1}">{$After}^
   #define  AtIceFunc   \
           #AutoTag ^{$Before=""}{$#1}{$After=""}^ ^{$Before}<$LinkTo ID="{$#1}()" Text="{$#1}">{$After}^
   #define  AtMmCmd       \
           #AutoTag ^<?xLT>${$#1}{$After=""}^ ^<?xLT><?Dollar><$LinkTo Text=~{$#1}~ ID="{$DocoCmd=~{$#1}~}">{$After}^
   #define  AtMmHeader    \
           #AutoTag ^{$#1}^ ^<$LinkTo Text='{$#1}'>^
   #(
        #define AtMmCfgMacro
        #AutoTag ^{$SpaceB=^ ^}{$#1}{$SpaceA=^ ^}^ ~{$SpaceA=^ ^}<$LinkTo Text='{$#1}'>{$SpaceA=^ ^}~
        #AutoTag ^<?xLT>${$#1}>^                   ~<?xLT>$<$LinkTo Text='{$#1}'>^}~
   #)
   #define  AtMmStdMacro  \
           #AutoTag ^{$#1}^ ^<$LinkTo Text='{$#1}'>^
   #define? AtUndocumented \
           #autoTag ^{$#1}^ ^<span title='{$TT}'><b>{$#1}</b></span>^
   #define? AtOld2New \
           #autoTag ^{$Old}^ ^{$New}^
   #define? ExternalLink class="External" TARGET="_blank"
#elseif
   ;--- Tagging for the generated HTML page ---------------------------------
   #define? HttpMmDocoDir    http://makemsi-manual.dennisbareis.com/                 ;;WAS: <?PpwizardAuthorBaseWebDir>makemsi/
   #define? HttpMmCmdTt      MAKEMSI command. Click for internet based documentation for the &quot;{$#1}&quot; command.&#13;&#10;&#13;&#10;<$AtMmCmdURL>
   #define? HttpVbsCaTt      MAKEMSI VBS function available to scripts created with the &quot;VbsCa&quot; command.&#13;&#10;&#13;&#10;<$AtMmVbsCaURL>
   #define? HttpIceTt        MAKEMSI function available to ICE validation suites.&#13;&#10;&#13;&#10;<$AtMmIceURL>
   #define? HttpMmHeaderTt   MAKEMSI header file. Click for internet based documentation for the &quot;{$#1}&quot; header file.&#13;&#10;&#13;&#10;<$AtMmHeaderURL>
   #define? HttpMmCfgMacroTt Configuration Macro used to alter behaviour or to specify a parameter. Click for internet based documentation for the &quot;{$#1}&quot; macro.&#13;&#10;&#13;&#10;<$AtMmCfgMacroURL>
   #define? HttpMmStdMacroTt Read only standard definition (macro). Click for internet based documentation for the &quot;{$#1}&quot; macro.&#13;&#10;&#13;&#10;<$AtMmStdMacroURL>
   #define? AtLinkTo  <b>{$Text}</b>
   #define? AtUndocumented                                                     \
           #autoTag ^{$#1}^ ^<span title='{$TT}'><b>{$#1}</b></span>^
   #define? AtOld2New \
           #autoTag ^{$Old}^ ^{$New}^
   #define?  AtVbsCaFunc   \
           #define+ AtMmVbsCaURL <$HttpMmDocoDir>{$URL=^{$#1 $$lower}^ $$lower}.htm \
           #AutoTag ^{$Before=""}{$#1}{$After=""}^ ^{$Before}<a href="<$AtMmVbsCaURL>" <$ExternalLink> title="<$HttpVbsCaTt #1=@{$#1}@>">{$#1}</a>{$After}^
   #define? AtIceFunc   \
           #define+ AtMmIceURL <$HttpMmDocoDir>{$URL=^{$#1 $$lower}^ $$lower}.htm \
           #AutoTag ^{$Before=""}{$#1}{$After=""}^ ^{$Before}<a href="<$AtMmIceURL>" <$ExternalLink> title="<$HttpIceTt #1=@{$#1}@>">{$#1}</a>{$After}^
   #define? AtMmCmd                                                        \
           #define+ AtMmCmdURL <$HttpMmDocoDir>{$URL=^{$DocoCmd=~{$#1 $$lower}~ $$lower}^}.htm \
           #autoTag "<?xLT>${$#1}{$After=^^}" ~<?xLT><?Dollar><a href="<$AtMmCmdURL>" <$ExternalLink> title="<$HttpMmCmdTt #1=@{$#1}@>">{$#1}</a>{$After=""}~
   #define? AtMmHeader                                                        \
           #define+ AtMmHeaderURL <$HttpMmDocoDir>{$#1 $$AtMmHeader $$lower}.htm     \
           #autoTag "{$#1}" ~<a href="<$AtMmHeaderURL>" <$ExternalLink> title="<$HttpMmHeaderTt #1=@{$#1}@>">{$#1}</a>~
   #(
        #define? AtMmCfgMacro
        #define+ AtMmCfgMacroURL <$HttpMmDocoDir>{$#1 $$AtMmHeader $$lower}.htm
        #AutoTag ^{$SpaceB=^ ^}{$#1}{$SpaceA=^ ^}^ ~{$SpaceA=^ ^}<a href="<$AtMmCfgMacroURL>" <$ExternalLink> title="<$HttpMmCfgMacroTt #1=@{$#1}@>">{$#1}</a>{$SpaceA=^ ^}~
        #AutoTag ^<?xLT>${$#1}>^                   ~<?xLT>$<a href="<$AtMmCfgMacroURL>" <$ExternalLink> title="<$HttpMmCfgMacroTt #1=@{$#1}@>">{$#1}</a>^}~
   #)
   #define? AtMmStdMacro                                                         \
           #define+ AtMmStdMacroURL <$HttpMmDocoDir>{$#1 $$AtMmHeader $$lower}.htm       \
           #autoTag "{$#1}" ~<a href="<$AtMmStdMacroURL>" <$ExternalLink> title="<$HttpMmStdMacroTt #1=@{$#1}@>">{$#1}</a>~
   #DefineRexx 'REXX_$$AtMmHeader'
           TheValue = ToLowerCase( ReplaceString(TheValue, '.', '_') );
   #DefineRexx
   #define? ExternalLink TARGET="_blank"
#endif
#define  AtVbsFunc <$AtVbsCaFunc {$?}>

;--- Now do the autotagging -------------------------------------------------
#ifndef MAKEMSI_NO_STANDARD_AUTOTAGS
   #ifndef HTMLRPT_NO_SOURCE_CODE
           #AutoTag "VbsCaMsgBox"  "CaMsgBox"
           #AutoTag "VbsCaDebug"   "CaDebug"
           #AutoTag "VbsCaGetEnv"  "CaGetEnv"
           <$AtVbsFunc   "GetSeqNumber">
           <$AtDllCaFunc_undocumented "Ca" "Debug">
           <$AtDllCaFunc_undocumented "Ca" "Debugv">
           <$AtVbsCaFunc "CaMsgBox">
           <$AtVbsCaFunc "VbsCaCadGetValidate" After="(">
           <$AtVbsCaFunc "VbsCaCadGet" After="(">
           <$AtVbsCaFunc "VbsCaRunSync">
           <$AtVbsCaFunc "VbsCaCadReplace">
           <$AtVbsCaFunc "CaDebug">
           <$AtVbsCaFunc "CaGetEnv">
           <$AtVbsCaFunc "CaDeleteFile">
           <$AtVbsCaFunc "CaSleep">
           <$AtVbsCaFunc "CaCreateFolder">
           <$AtVbsCaFunc "CaMkObject">
           <$AtVbsCaFunc "VbsCaRaiseError">
           <$AtVbsCaFunc "VbsCaPropertyGet">
           <$AtMmCmd "TableCreate">
           <$AtMmCmd "TableDelete">
           <$AtMmCmd "TableDefinition">
           <$AtMmCmd "/TableDefinition"   URL="tabledefinition_end">
           <$AtMmCmd "AbortIf">
           <$AtMmCmd "Access" After=" ">
           <$AtMmCmd "AccessApply">
           <$AtMmCmd "Binary">
           <$AtMmCmd "CodePage">
           <$AtMmCmd "Cabinet">          ;;<$AtMmCmd "Compile">
           <$AtMmCmd "/Cabinet"          URL="cabinet_end">
           <$AtMmCmd "HookInto">
           <$AtMmCmd "HtmlDirTable">
           <$AtMmCmd "Icon">
           <$AtMmCmd "Column">
           <$AtMmCmd "Component?">
           <$AtMmCmd "ComponentFind">
           <$AtMmCmd "ProductFind">
           <$AtMmCmd "Component">
           <$AtMmCmd "/Component"         URL="component_end">
           <$AtMmCmd "ComPlusApp">
           <$AtMmCmd "/ComPlusApp"        URL="complusapp_end">
           <$AtMmCmd "ComPlusCompUpdate">
           <$AtMmCmd "/ComPlusCompUpdate" URL="compluscompupdate_end">
           <$AtMmCmd "ComPlusComp">
           <$AtMmCmd "ComPlusRole">
           <$AtMmCmd "ComPlusExport">
           <$AtMmCmd "ComPlusProperty">
           <$AtMmCmd "DialogPreview">
           <$AtMmCmd "DialogRemove">
           <$AtMmCmd "DialogEntry">
           ;<$AtMmCmd "Dialog?">
           <$AtMmCmd "Dialog">
           <$AtMmCmd "/Dialog">
           <$AtMmCmd "Directory" After=" ">
           <$AtMmCmd "DirectoryTree">
           <$AtMmCmd "DirectoryCompress">
           <$AtMmCmd "DllCaEntry?">
           <$AtMmCmd "DllCaEntry">
           <$AtMmCmd "/DllCaEntry"       URL="dllcaentry_end">
           <$AtMmCmd "DllCa-C">
           <$AtMmCmd "/DllCa-C"          URL="dllca-c_end">
           <$AtMmCmd "DllCa">
           <$AtMmCmd "Environment">
           <$AtMmCmd "ExeCa">
           <$AtMmCmd "ExtnAction">
           <$AtMmCmd "MacroCfg">
           <$AtMmCmd "/MacroCfg">
           <$AtMmCmd "Adsi">
           <$AtMmCmd "/Adsi">
           <$AtMmCmd "IniImport">
           <$AtMmCmd "IniFile">
           <$AtMmCmd "/IniFile"           URL="inifile_end">
           <$AtMmCmd "IniSection">
           <$AtMmCmd "/IniSection"        URL="inisection_end">
           <$AtMmCmd "Ini">
           <$AtMmCmd "Extn">
           <$AtMmCmd "EventLogCustomView">
           <$AtMmCmd "EventLogSource">
           <$AtMmCmd "/Extn"              URL="extn_end">
           <$AtMmCmd "Feature?">
           <$AtMmCmd "Feature">
           <$AtMmCmd "/Feature"           URL="feature_end">
           <$AtMmCmd "FileComment">
           <$AtMmCmd "/FileComment"       URL="filecomment_end">
           <$AtMmCmd "FolderIcon">
           <$AtMmCmd "MajorUpgrade">
           <$AtMmCmd "RegistryComment">
           <$AtMmCmd "/RegistryComment"   URL="registrycomment_end">
           <$AtMmCmd "FileFind">
           <$AtMmCmd "FilesInZip"          DocoCmd=^F<?_>ilesInZip^>
           <$AtMmCmd "FilesExcludeClear">
           <$AtMmCmd "FilesExclude">
           <$AtMmCmd "Files">
           <$AtMmCmd "FileMakeIgnore">
           <$AtMmCmd "/FileMakeIgnore">
           <$AtMmCmd "FileMake">
           <$AtMmCmd "/FileMake"          URL="filemake_end">
           <$AtMmCmd "File">
           <$AtMmCmd "Guid" After=" ">
           <$AtMmCmd "MapUserDir">
           <$AtMmCmd "MergeModule">
           <$AtMmCmd "MsiExtraFiles">
           <$AtMmCmd "MsiValFilter">
           <$AtMmCmd "Msi"                After=" ">
           <$AtMmCmd "/Msi"               URL="msi_end">
           <$AtMmCmd "/Schedule"          URL="schedule_end">
           <$AtMmCmd "Path">
           ;<$AtMmCmd "PlatformProcessing"  DocoCmd=^P<?_>latformProcessing^>
           <$AtMmCmd "Platform">
           <$AtMmCmd "PropertyCa">
           <$AtMmCmd "PropertyList">
           <$AtMmCmd "Property">
           <$AtMmCmd "RegistryImport">
           <$AtMmCmd "RegistryRead">
           <$AtMmCmd "Registry">
           <$AtMmCmd "RemoveFile">
           <$AtMmCmd "RowsDeleteAll">
           <$AtMmCmd "RowsDelete">
           <$AtMmCmd "Schedule">
           <$AtMmCmd "SelfRegister">
           <$AtMmCmd "ServiceControl">
           <$AtMmCmd "ServiceInstall">
           <$AtMmCmd "SourceFile">
           <$AtMmCmd "Transform">
           <$AtMmCmd "VbsCaSetup">
           <$AtMmCmd "VbsCaEntryName">
           <$AtMmCmd "VbsCaEntry">
           <$AtMmCmd "VbsCa">
           <$AtMmCmd "Vbs">
           <$AtMmCmd "/VbsCaEntry"        URL="vbscaentry_end">
           <$AtMmCmd "/VbsCa"             URL="vbsca_end">
           <$AtMmCmd "/Vbs"               URL="vbs_end">
           <$AtMmCmd "JsCaSetup">
           <$AtMmCmd "JsCaEntry">
           <$AtMmCmd "JsCa">
           <$AtMmCmd "/JsCaEntry"        URL="jscaentry_end">
           <$AtMmCmd "/JsCa"             URL="jsca_end">
;;;;       <$AtMmCmd "Row"                After=" ">
           <$AtMmCmd "Row">
           <$AtMmCmd "/Row"               URL="row_end">
           <$AtMmCmd "RunCmd">
           <$AtMmCmd "/RunCmd"            URL="runcmd_end">
           <$AtMmCmd "ShortcutUrl">
           <$AtMmCmd "Shortcut">
          ;<$AtMmCmd "SelfRegImport">
           <$AtMmCmd "Summary">
           <$AtMmCmd "Table"  After=" ">
           <$AtMmCmd "/Table" After=" "        URL="table_end">
           <$AtMmCmd "/Table" After="<?xGT>"   URL="table_end">
           <$AtMmCmd "TableExportToIdt">
           <$AtMmCmd "TableImportFromIdt">
           <$AtMmCmd "WrapInstall">

           <$AtMmCmd "Sql"               DocoCmd="RunCmd">
           <$AtMmCmd "SQL"               DocoCmd="RunCmd">
           <$AtMmCmd "/Sql"              URL="runcmd_end" DocoCmd="runcmd_end">
           <$AtMmCmd "/SQL"              URL="runcmd_end" DocoCmd="runcmd_end">

          ;--- MSM related --------------------------------------------------
          <$AtMmCmd   "MsmSuffix">
          <$AtMmCmd   "MsmSystemDirectory">

          ;--- Configuration Macros -----------------------------------------
          #define? AUTOTAG_CONFIGURATION_MACROS Y
          #if ['<$AUTOTAG_CONFIGURATION_MACROS>' <> 'N']
                <$AtMmCfgMacro "COMPANY_AUTO_UNINSTALL_VIA_UPGRADE_TABLE">
                <$AtMmCfgMacro "COMPANY_PRODUCT_ICON">
                <$AtMmCfgMacro "COMPANY_WANT_COMPLETE_FEATURE">
                <$AtMmCfgMacro "COMPANY_WANT_TO_INSTALL_DOCUMENTATION">
                <$AtMmCfgMacro "COMPILE_TYPE">
                <$AtMmCfgMacro "FILEINFO_GET_DOCUMENTINFO">
                <$AtMmCfgMacro "FILEINFO_GET_STRFILEINFO">
                <$AtMmCfgMacro "MAKEMSI_OUT_MSI_DIR">
                <$AtMmCfgMacro "PLATFORM_SDK_DIR">
                <$AtMmCfgMacro "TABLES_FILE_SEQ_NUMBER_LIMIT">
                <$AtMmCfgMacro "ONEXIT_GENERATE_HTML">
                <$AtMmCfgMacro "SUNDRY_DISALLOW_USE_OF_SCRIPT_CUSTOM_ACTIONS">
                <$AtMmCfgMacro "UISAMPLE_ADD_INSTALL_INSTRUCTIONS_BUTTON_URL">
                <$AtMmCfgMacro "VER_FILENAME.VER">
          #endif

         ;--- ICE related --------------------------------------------------
        <$AtMmCmd   "Ice" After=" ">
        <$AtMmCmd   "/Ice">
        <$AtMmCmd   "IceEndMainline">
        <$AtIceFunc "IceDebug">
        <$AtIceFunc "IceInfo">
        #autotag    "IceError" "IceE<?xNothing>rror"   ;;Stop "Error(" processing later on...
        <$AtIceFunc "IceE<?xNothing>rror">
        <$AtIceFunc "IceCheck4Err">
        <$AtIceFunc "IceFatal">
        <$AtIceFunc "IceLocation">
        <$AtIceFunc "IceWarning">
        <$AtIceFunc "IceViewClose">
        <$AtIceFunc "IceViewOpen">
        <$AtIceFunc "IceViewFetch">





       ;##############################################################################
       ;### Automatically link examples to PPWIZARD online doco. This gets a       ###
       ;### little bit complicated because of some of the automatic filename       ###
       ;### generation that occurred during the generation of the doco as well as  ###
       ;### the fact that a '#' is 'invalid' in a URL filename.                    ###
       ;##############################################################################
       #(  ''
           #define  PpwFunc
           #if '{$Url=''}' <> ''
               #RexxVar PpwUrl = '{$Url}.htm'
           #elseif
               #evaluate+ '' ^PpwUrl = ToLowerCase(strip('{$#1}') || ".htm")^
           #endif

           ;--- Generate the link! ------------------------
           #if ['{$TT=^^}' = '']
               #define+ PPW_TT
           #elseif
               #define+ PPW_TT {$TT}&#10;&#10;
           #endif
           #(
               <A HREF="<?PpwizardAuthorBaseWebDir>ppwizard/<??PpwUrl>"
                       TITLE="<$PPW_TT>A PPWIZARD based rexx function.
                       Click for its internet based html documentation."
                       <$ExternalLink>
               >
           #)
               {$NewName=^{$#1}^} ;;Allow function name mapping
           </A>
       #)
       #(  ''
           #define ExampleLinkToPpw#Cmd
           #if '{$Url=''}' <> ''
               #RexxVar PpwUrl = 'ppwizard/{$Url}.htm'
           #elseif
               #evaluate+ '' ^PpwUrl = ToLowerCase("ppwizard/hash" || strip(substr('{$CMD}', 9)) || ".htm")^  \
           #endif

           ;--- Generate the link! ------------------------
           #if ['{$TT=^^}' = '']
               #define+ PPW_TT
           #elseif
               #define+ PPW_TT {$TT}&#10;&#10;
           #endif
           #(
               <A HREF="<?PpwizardAuthorBaseWebDir><??PpwUrl>"
                       TITLE="<$PPW_TT>A PPWIZARD command.
                             Click for its internet based html documentation."
                       <$ExternalLink>
               >
           #)
                   {$CMD}
               </A>
       #)
       #(  ''
           #define At2PpwFunc
           #if ['{$NB=^N^}' = 'N']
               #AutoTag ^{$#1}(^ ^<$PpwFunc {$?ResetUsed}{$?}>(^
           #elseif
               #AutoTag ^{$#1}^  ^<$PpwFunc {$?ResetUsed}{$?}>^
           #endif
       #)
      ;;#AutoTag "<?xHASH>Data"              ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="data" TT=~Defines data, typically used to pass CustomActionData to a deferred custom action.~>^
       #AutoTag "$$WI_FMT"                   ^<$AtLinkTo TEXT="$$WI_FMT">^
       #AutoTag "<?xLT>$LSB<?xGT>"           ^<$AtLinkTo ID="Square Brackets" Text="<?xLT>$LSB<?xGT>">^
       #AutoTag "<?xLT>$RSB<?xGT>"           ^<$AtLinkTo ID="Square Brackets" Text="<?xLT>$RSB<?xGT>">^
       #AutoTag "<?xHASH>data"              ^<$AtLinkTo ID="#DATA for Commands" Text="<?xHASH>data">^
       #AutoTag "<?xHASH>Data"              ^<$AtLinkTo ID="#DATA for Commands" Text="<?xHASH>data">^
       #AutoTag "<?xHASH>Data"              ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="data_for_commands" TT=~Defines data, typically used to pass CustomActionData to a deferred custom action.~>^
       #AutoTag "<?xHASH>define "           ^<$ExampleLinkToPpw#Cmd CMD="<?xHASH>define" TT=~Define a symbol macro so you can refer to many times in your script. Also used for configuration.~> ^
       #AutoTag "<?xHASH>define?"           ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="hashdefine" TT=~Defines a macro. Only does so if its not already known (commonly used for default values).~>^
       #AutoTag "<?xHASH>define+"           ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="hashdefine" TT=~Defines a macro. No warning if it already exists (we probably expect it to).~>^
       #AutoTag "<?xHASH>DefineRexx"        ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Define some rexx code for immediate or deferred execution.~>^
       #AutoTag "<?xHASH>evaluate"          ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Execute some rexx code.~>^
       #AutoTag "<?xHASH>include"           ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~The #include command is used to include an external file (frequently called a &quot;Header File&quot;).~>^
       #AutoTag "<?xHASH>undef"             ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Remove a symbol.~>^
       #AutoTag "<?xHASH>option"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Tweek PPWIZARD options.~>^
       #AutoTag "<?xHASH>RexxVar"           ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Manipulate rexx variables.~>^
       #AutoTag "<?xHASH>info"              ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Output info message to console.~>^
       #AutoTag "<?xHASH>import"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Import from an external database.~>^
       #AutoTag "<?xHASH>if "               ^<$ExampleLinkToPpw#Cmd CMD="<?xHASH>if" TT=~Do following if true.~> ^
       #AutoTag "<?xHASH>ifndef"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Do following if symbol NOT defined.~>^
       #AutoTag "<?xHASH>ifdef"             ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="ifdef" TT=~Do following if symbol defined.~>^
       #AutoTag "<?xHASH>elseif"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Do followinf if previous test was false.~>^
       #AutoTag "<?xHASH>endif"             ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~End of conditional (#if etc).~>^
       #AutoTag "<?xHASH>error"             ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Abort as error detected.~>^
       #AutoTag "<?xHASH>break"             ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Exit loop.~>^
       #AutoTag "<?xHASH>DependsOn"         ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Update "MAKE" like information.~>^
       #AutoTag "<?xHASH>Output"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Used to create/close a file.~>^
       #AutoTag "<?xHASH>output"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" TT=~Used to create/close a file.~>^
       #AutoTag "<?xHASH>OnExit"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="onexit" TT=~Queue up processing for end of script.~>^
       #AutoTag "<?xHASH>eof"               ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="eof" TT=~End of File. No processing (of this file) past this line.~>^
       #AutoTag "<?xHASH>{"                 ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="loopstart" TT=~Start of a ppwizard loop.~>^
       #AutoTag "<?xHASH>}"                 ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="loopend" TT=~End of a ppwizard loop.~>^
       #AutoTag "<?xHASH>("                 ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="hash1line" TT=~Marks start of a PPWIZARD line (may expand to many)~>^
       #AutoTag "<?xHASH>)"                 ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="hash1lineend" TT=~Marks end of a PPWIZARD line (may expand to many)~>^
       #AutoTag "<?xHASH>NextId"            ^<$ExampleLinkToPpw#Cmd CMD="{$AT}" URL="nextid" TT=~Create new namespace. Prevents possible variable name clash.~>^
       <$At2PpwFunc "GetEnv" TT=^Get contents of an environment variable.^>
       <$At2PpwFunc "getenv" TT=^Get contents of an environment variable.^>
       <$At2PpwFunc "ToLowerCase" TT=^Convert to lower case.^>
       <$At2PpwFunc "FileFind" TT=^Find a file or see if exists.^>
       <$At2PpwFunc "Error" TT=^Abort as we have detected an error.^>
       <$At2PpwFunc "error" TT=^Abort as we have detected an error.^>
       <$At2PpwFunc "ReplaceString" TT=^Replace one string with another.^>
       <$At2PpwFunc "GetFileTimeStamp" TT=^Get date/time of a file.^>
       <$At2PpwFunc "AddCommasToDecimalNumber" TT=^Format a number with commas.^>
       <$At2PpwFunc "InputComponentLevel"      TT=^Work out details of processed files^>
       <$At2PpwFunc "FileGetTmpName"           TT=^Works out the name of a temporary file that is safe to use.^>
       <$At2PpwFunc "DirQueryExists"           TT=^Returns the full path if the directory exists (or &quot;&quot; if not).^>
       <$At2PpwFunc "FileQueryExists"          TT=^Returns the full path if the file exists (or &quot;&quot; if not).^>
       <$At2PpwFunc "AddressCmd"                        NB="Y" TT=^Tells PPWIZARD to run an external command line.^>
       <$At2PpwFunc "Dirs4Mask"                         NB="Y" TT=^Gets a list of directories that match the specified mask.^>
       <$At2PpwFunc "Files4Mask"                        NB="Y" TT=^Gets a list of files that match the specified mask.^>
       <$At2PpwFunc "FileClose"                         NB="Y" TT=^Closes a file.^>
       <$At2PpwFunc "FileDelete"                        NB="Y" TT=^Deletes a file.^>
       <$At2PpwFunc "DieIfIoErrorOccurred"              NB="Y" TT=^Abort if a file error occurred.^>
       <$At2PpwFunc "MustDeleteFile"                    NB="Y" TT=^Delete a file. Abort on failure.^>
       <$At2PpwFunc "SetXCode"                          NB="Y" TT=^Xcodes are used to hide/output particular codes into the output file.^>
       <$At2PpwFunc "ScheduleCleanupCode"               NB="Y" TT=^Defines some rexx cleanup code for execution just before PPWIZARD exits.^>
       <$At2PpwFunc "MacroSet"                          NB="Y" TT=^Define a symbol.^>
       <$At2PpwFunc "AddInputFileToDependancyList"      NB="Y" TT=^Identify an input file to ppwizard.^>
       <$At2PpwFunc "AddOutputFileToDependancyList"     NB="Y" TT=^Identify an output file to ppwizard.^>
       <$At2PpwFunc "_SysFileTree"    URL="sysfiletree" NB="Y" TT=^Get list of files matching a mask.^>
       <$At2PpwFunc "FilePart"        URL="filepart"    TT=^Extract components of a filename.^>
       <$At2PpwFunc "_filespec"       URL="filepart"    TT=^Extract components of a filename.^ NewName="FilePart">
   #endif
#endif




