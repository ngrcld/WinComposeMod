<!--
   - WinCompose — a compose key for Windows — http://wincompose.info/
   -
   - Copyright © 2013—2019 Sam Hocevar <sam@hocevar.net>
   -             2014—2015 Benjamin Litzelmann
   -
   - This program is free software. It comes without any warranty, to
   - the extent permitted by applicable law. You can redistribute it
   - and/or modify it under the terms of the Do What the Fuck You Want
   - to Public License, Version 2, as published by the WTFPL Task Force.
   - See http://www.wtfpl.net/ for more details.
  -->

<wc:BaseWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wc="clr-namespace:WinCompose"
        xmlns:i18n="clr-namespace:WinCompose.i18n;assembly=language"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        mc:Ignorable="d" x:Class="WinCompose.SequenceWindow"
        Title="{x:Static i18n:Text.WindowTitle}" Width="1024" Height="600"
        Icon="/WinCompose;component/res/icon_sequences.png">

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="OnCloseCommandExecuted"/>
        <CommandBinding Command="ApplicationCommands.Copy"
                        Executed="OnCopyCommandExecuted"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="ApplicationCommands.Close"/>
    </Window.InputBindings>

    <Window.Resources>
        <BitmapImage x:Key="EmptyKeyImage" UriSource="../res/key_empty.png"/>
        <BitmapImage x:Key="SpaceKeyImage" UriSource="../res/key_space.png"/>

        <emoji:TextBlock Text="📋" x:Key="CopyEmoji" FontSize="12"/>
        <emoji:TextBlock Text="❤️" x:Key="FavoriteEmoji" FontSize="12"/>
        <emoji:TextBlock Text="💔" x:Key="UnfavoriteEmoji" FontSize="12"/>
        <emoji:TextBlock Text="❌" x:Key="DisableEmoji" FontSize="12"/>

        <!-- This style can be applied to a TextBlock to display text with a smaller size -->
        <Style x:Key="SmallTextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- This DataTemplate contains a TextBox and a "clear text" button that can be used for the Search text input -->
        <DataTemplate x:Key="SearchTextTemplate">
            <Grid>
                <TextBox x:Name="SearchBox" Padding="4" Width="240"
                         Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DockPanel>
                    <Button DockPanel.Dock="Right" Click="ClearSearch_Click" Margin="4,0">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="Transparent">
                                    <ContentPresenter Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                        <TextBlock FontSize="10" VerticalAlignment="Center" Text="✖"
                                   FontFamily="{x:Static wc:Constants.PreferredFontFamily}"/>
                    </Button>
                    <TextBlock x:Name="Watermark" Text="{x:Static i18n:Text.Search}" VerticalAlignment="Center"
                               Margin="8,0" FontStyle="Italic" Foreground="DarkGray" Visibility="Collapsed" IsHitTestVisible="False"/>
                </DockPanel>
            </Grid>
            <!-- If search box is empty and unfocused, show the watermark -->
            <DataTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsFocused" Value="False" SourceName="SearchBox"/>
                        <Condition Property="Text" Value="" SourceName="SearchBox"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible" TargetName="Watermark"/>
                </MultiTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <ContextMenu x:Key="ContextMenu">
            <MenuItem Header="{x:Static i18n:Text.CopyToClipboard}" Icon="{StaticResource CopyEmoji}"
                      Command="ApplicationCommands.Copy"/>
            <MenuItem Header="{x:Static i18n:Text.AddToFavorites}" Icon="{StaticResource FavoriteEmoji}"
                      Click="ToggleFavorite_Click" Visibility="{Binding AddToFavoritesVisibility}"/>
            <MenuItem Header="{x:Static i18n:Text.RemoveFromFavorites}" Icon="{StaticResource UnfavoriteEmoji}"
                      Click="ToggleFavorite_Click" Visibility="{Binding RemoveFromFavoritesVisibility}"/>
        </ContextMenu>
    </Window.Resources>

    <Grid Margin="8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Column="0" LastChildFill="True">
            <StackPanel Margin="4" Orientation="Horizontal" DockPanel.Dock="Top" VerticalAlignment="Top">
                <ContentPresenter x:Name="SearchWidget" Content="{Binding}"
                                  ContentTemplate="{StaticResource SearchTextTemplate}"/>
            </StackPanel>

            <GroupBox DockPanel.Dock="Bottom" Margin="4"
                      Header="{x:Static i18n:Text.UserDefinedSequences}">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Button x:Name="EditUserDefinedSequences" MinWidth="80" Margin="8,4"
                            Content="{x:Static i18n:Text.UserDefinedSequencesEdit}"
                            Click="EditUserDefinedSequences_Click" />
                    <Button x:Name="ReloadUserDefinedSequences" MinWidth="80" Margin="8,4"
                            Content="{x:Static i18n:Text.UserDefinedSequencesReload}"
                            Click="ReloadUserDefinedSequences_Click" />
                </StackPanel>
            </GroupBox>

            <wc:TreeView Margin="4" ItemsSource="{Binding Categories}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <wc:TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <Setter Property="Padding" Value="4"/>
                        <Setter Property="Visibility" Value="{Binding Visibility}" d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, wc:CategoryViewModel}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected}" d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, wc:CategoryViewModel}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </wc:TreeView.ItemContainerStyle>
                <wc:TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type wc:CategoryViewModel}" ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <emoji:TextBlock Text="{Binding RichName}" HorizontalAlignment="Left" TextWrapping="Wrap"/>
                            <!--<emoji:TextBlock Text="{Binding Icon}" Margin="4,0,0,0"/>-->
                            <!-- TODO: make this a tooltip instead? -->
                            <!--
                            <StackPanel Orientation="Horizontal" HorizonalAlignment="Right">
                                <TextBlock Text="{Binding RangeStart, StringFormat=U+\{0:X4\}}" Style="{StaticResource SmallTextBlock}"/>
                                <TextBlock Text="…" Style="{StaticResource SmallTextBlock}"/>
                                <TextBlock Text="{Binding RangeEnd, StringFormat=U+\{0:X4\}}" Style="{StaticResource SmallTextBlock}"/>
                            </StackPanel>
                            -->
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </wc:TreeView.ItemTemplate>
            </wc:TreeView>
        </DockPanel>

        <GridSplitter Grid.Column="1" ResizeBehavior="PreviousAndNext" Background="Transparent"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

        <DockPanel Grid.Column="2">
            <TextBlock DockPanel.Dock="Top" Text="{x:Static i18n:Text.Sequences}" Margin="8"/>
            <ListBox Margin="4" ItemsSource="{Binding Sequences}" Name="ListBox"
                     AlternationCount="2"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     VirtualizingStackPanel.VirtualizationMode="Recycling">
                <!-- ^^ This is still set to "Standard" because Emoji.Wpf.Image doesn't recycle well -->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="#0cf39611"></Setter>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="#08000000"></Setter>
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="ContextMenu" Value="{StaticResource ContextMenu}"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Margin="0,2">

                            <!-- The small character box and its large tooltip -->
                            <Border BorderThickness="1" BorderBrush="DarkGray" CornerRadius="4"
                                    Background="White" Margin="2,0,4,0" SnapsToDevicePixels="True">
                                <Viewbox Height="32" DockPanel.Dock="Left" StretchDirection="UpOnly"
                                         ToolTipService.InitialShowDelay="0" ToolTipService.BetweenShowDelay="0">
                                    <emoji:TextBlock Text="{Binding Result}" Background="Transparent"
                                                     Height="32" Margin="4,0,4,0" FontSize="24"
                                                     FontFamily="{x:Static wc:Constants.PreferredFontFamily}"/>
                                </Viewbox>
                                <Border.ToolTip>
                                    <emoji:TextBlock Text="{Binding Result}"
                                                     Height="200" Margin="20,0,20,0" FontSize="150"
                                                     FontFamily="{x:Static wc:Constants.PreferredFontFamily}"/>
                                </Border.ToolTip>
                            </Border>

                            <!-- The sequence, printed as key icons -->
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Margin="4,0">
                                <Border Width="32" Height="32">
                                    <Border.Background>
                                        <ImageBrush ImageSource="{StaticResource EmptyKeyImage}"/>
                                    </Border.Background>
                                    <Viewbox Margin="4">
                                        <TextBlock Text="♦" Foreground="#310"
                                                   FontFamily="Consolas, Segoe UI Symbol, Arial" FontWeight="Bold" />
                                    </Viewbox>
                                </Border>
                                <ItemsControl ItemsSource="{Binding Sequence}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text=" " VerticalAlignment="Center"/>
                                                <Border Width="32" Height="32" x:Name="KeyImage">
                                                    <Border.Background>
                                                        <ImageBrush ImageSource="{StaticResource EmptyKeyImage}"/>
                                                    </Border.Background>
                                                    <Viewbox Margin="4">
                                                        <TextBlock Text="{Binding KeyLabel}" Foreground="#310"
                                                                   FontFamily="Consolas, Segoe UI Symbol, Arial" FontWeight="Bold" />
                                                    </Viewbox>
                                                </Border>
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <!-- Change the key image and size when the value matches the space key -->
                                                <DataTrigger Binding="{Binding}" Value="{x:Static wc:SequenceViewModel.SpaceKey}">
                                                    <Setter TargetName="KeyImage" Property="Width" Value="64"/>
                                                    <!--<Setter TargetName="KeyImage" Property="Height" Value="16"/>-->
                                                    <Setter TargetName="KeyImage" Property="Background">
                                                        <Setter.Value>
                                                            <ImageBrush ImageSource="{StaticResource SpaceKeyImage}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                                <StackPanel.RenderTransform>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                </StackPanel.RenderTransform>
                                <TextBlock Text="{Binding CodePoint, Mode=OneTime}"
                                           Foreground="DarkMagenta"/>
                                <TextBlock Text="{Binding UnicodeCategory, Converter={wc:UnicodeCategoryConverter}, Mode=OneTime}"
                                           Foreground="DarkCyan" FontStyle="Italic" HorizontalAlignment="Right" Margin="10,0"/>
                            </StackPanel>
                            <emoji:TextBlock Text="{Binding RichDescription, Mode=OneWay}" TextTrimming="WordEllipsis"/>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>
        </DockPanel>
        <Frame x:Name="MainFrame">
            <Frame.Template>
                <ControlTemplate TargetType="Frame">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          Name="PART_FrameCP"/>
                    </Border>
                </ControlTemplate>
            </Frame.Template>
        </Frame>
    </Grid>
</wc:BaseWindow>
